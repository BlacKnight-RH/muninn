{"name":"Muninn","tagline":"A short and small memory forensics helper.","body":"# Muninn - The Volatility Reporter\r\n\r\n##About\r\nMuninn was built to allow an easier approach to initial memory forensics on Windows 7 and Windows XP machines. Usually, when approaching a memory analysis we start by plotting out the basics and looking for the exceptions. This usually involves a lot of commandlining for each and every data set with Volatility. \r\nMuninn will take a case number and a memory image and will try to grab the basic pieces of data _**we**_ usually look for and export them into a readable txt file which will be 'nicer' to read by a human being. It does not try to lead the memory forensics from a to z but rather to help the auditor through the initial plotting.\r\nTo check for updates or submit changes follow this repository at the [official repository](https://github.com/ytisf/Muninn)\r\nThis program is licensed under GPLv3.\r\n\r\n##Installation\r\nClone this repository using:\r\n\r\n    git clone https://www.github.com/ytisf/Muninn\r\n\r\nMake sure you have all the dependencies installed:\r\n\r\n    sudo pip install prettytable\r\n    \r\nMake sure [Volatility](https://code.google.com/p/volatility/) is installed and linked to vol.py . \r\n\r\n    sudo apt-get install subversion pcregrep libpcre++-dev python-dev build-essentia libgmp3-dev\r\n    sudo apt-get install python-pycryptopp sqlite3 libsqlite3-dev\r\n    wget https://volatility.googlecode.com/files/volatility-2.3.tar.gz\r\n    tar xfv volatility-2.3.tar.gz\r\n    cd volatility-2.3/\r\n    sudo python setup.py install\r\n\r\n##How To\r\nThe basic command line arguments for Muninn are:\r\n\r\n    Options:\r\n        -h, --help                           show this help message and exit\r\n        -f FILENAME, --file=FILENAME         The path to memory image to analyse\r\n        -c CASENUMBER, --case=CASENUMBER     Case number to use\r\n\r\nThe image location and case number are mandatory.\r\n\r\n\r\n##Documentation\r\nBasic structure of Muninn is:\r\n\r\n* **imports**\r\n* vol_handler.py \r\n* error_handler.py\r\n* report_manager.py\r\n* muninn.py\r\n* README.md\r\n\r\n###muninn.py\r\nThe main execution file. This file just calls other imports. This file manages the flow of the application and is a bit documented. Function names and calls are simple to understand.\r\n###error_handler.py\r\nThis manages errors in the program. It is very simple and not documented (since there is nothing to document). Every other python module in this application will call error_handler.py for output to the user (screen).\r\n###report_manager.py\r\nWill be called to write the report file. It manages the functions:\r\n\r\n* **\\_\\_init___** - \r\n* **InitiateDocument** - Will create the first block of the document and create the file_handler.\r\n* **print_title** - Will add a header to the file.\r\n* **print_table** - Will add a table to the report (since we have many).\r\n* **save** - This will save the document properly and close the file_handler.\r\n\r\n###vol_handler.py\r\n> Warning! Black magic regexing here!\r\n> You've been warned!\r\n\r\n* **\\_\\_init__** - This will initialize constructs. In general, all of the function will try to store the output in the main class as attributes to the class and not as a return option or anything like that.\r\n* **regex_search** - Just what it says.\r\n* **check_if_vol_is_installed** - Diddo.\r\n* **get_image_type** - First time we use Volatility, and we use it to get image type. \r\n* **document_image_details** - Generates basic image details such as MD5.\r\n* **get_process_list** - Takes the process list from the memory image.\r\n* **hive_list** - Gets all the hives. Used also at *find\\_hashes*\r\n* **find_hashes** - Extract hashes (and users) from mem image. \r\n* **get_network_connections** - Extract all UDP and TCP connections. (black craft magic van-dam regex vodoo here)\r\n* **get_runkey_from_reg** - Gets the startup keys from the Registry.\r\n* **drivers** - creates the self._drivers object and fills it we the drivers' list.\r\n\r\n###README.md\r\nJust this readme file.\r\n\r\n##GPLv3\r\nMuninn - An Automatic Initial Memory Forensics Tool\r\nCopyright (C) 2014 Yuval tisf Nativ\r\n\r\nThis program is free software: you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License as published by\r\nthe Free Software Foundation, either version 3 of the License, or\r\n(at your option) any later version.\r\n\r\nThis program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\nYou should have received a copy of the GNU General Public License\r\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n","google":"UA-53267734-3","note":"Don't delete this file! It's used internally to help with page regeneration."}